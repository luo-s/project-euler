# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.

# fiboEvenSum(8) should return 10.
# fiboEvenSum(10) should return 10.
# fiboEvenSum(34) should return 44.
# fiboEvenSum(60) should return 44.
# fiboEvenSum(1000) should return 798.
# fiboEvenSum(100000) should return 60696.
# fiboEvenSum(4000000) should return 4613732.

############################################################
# first approach
def fiboEvenSum(n):
    if n < 2: 
        return 0
    a, b = 1, 2
    total = 2
    # keep generating fibonacci numbers until it exceed n
    while (a <= n and b <= n):
        a += b
        if a > n:
            break
        if a % 2 == 0:
            total += a
        b += a
        if b > n:
            break
        if b % 2 == 0:
            total += b
    return total

############################################################
# more clear logic
def fiboEvenSum(n):
    a, b = 1, 2
    total = 0
    while a <= n:
        if a % 2 == 0:
            total += a
        # generate the next fibonacci number
        a, b = b, b + a
    return total